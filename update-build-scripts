#! /bin/sh

#Â Set up $install_path/$build/gcc-build-tools/{bin,scripts}

scripts=`dirname $0`

. $scripts/paths
. $scripts/scripts-version
. $scripts/build-utils

print_help()
{
  echo "`basename $0` [options]"
  echo "  Installs into 'gcc-build-tools' at the chosen prefix."
  echo "options:"
  echo " --prefix     : specify prefix (default $install_path/<build-triple>)."
  echo " --arch       : specify a different arch from the kernel"
  echo " --force/-f   : continue on non-fatal error."
  echo " --help/-h    : this output."
  echo " --version/-v : scripts version."
}

arch=
prefix=
goon=1
while [ $goon -eq 1 -a $# -gt 0 ]
do
  case $1 in
    --help | -h)
      print_help
      exit 0
      ;;
    --prefix)
      prefix=$2
      shift; shift
      ;;
    --arch)
      arch=$2
      shift; shift
      if [ $arch = "arm64" ]; then
        arch="aarch64"
      fi
      ;;
    -v | --version)
      echo "scripts version: `scripts_version`"
      shift
      exit 0
      ;;
    *)
      goon=0
      ;;
  esac
done

build=`get_build_triple $arch`

if [ "X$prefix" = "X" ]; then
  prefix="$install_path/$build/gcc-build-tools"
fi

echo "Installing to : $prefix"

script_list="gcc-bootstrap-and-test paths scripts-version find-a-git \
gcc-branch-rev gcc-save-test gcc-update-test build-utils ramdisk \
print-install-dir test-summary gcc-autoreconf.sh"

if [ ! -d $prefix/bin ]; then
  echo "warning: no binary tools installed yet" >&2
  mkdir -p $prefix/bin
fi

for s in $script_list; do
  cp $scripts/$s $prefix/bin/$s
done

if [ ! -d $prefix/dejagnu-boards ]; then
  mkdir -p $prefix/dejagnu-boards
fi

dejagnu_list="gcc-runtest-site.exp gcc-env \
 dejagnu-boards/dummy.exp dejagnu-boards/no-exe.exp "

for d in $dejagnu_list; do
  cp $scripts/$d $prefix/$d
done


